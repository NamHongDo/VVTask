@model KidDetailsViewModel


@if ((Model.myToaster.Message != "") && (Model.myToaster != null))
{
    <div class="toast mt-3" id="mytoastr">
        <div class="toast-body @Model.myToaster.CssClass">
            @Model.myToaster.Message
        </div>
    </div>
}

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h1>Name:</h1>
        </div>
        <div class="col-md-6">
            <h1>@Model.kid.Name</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <h1>Total point:</h1>
        </div>
        <div class="col-md-6">
            <h1>@Model.kid.TotalPoint</h1>
        </div>
    </div>
</div>
<a class="btn btn-primary"
   asp-controller="Kid"
   asp-action="Edit"
   asp-route-id="@Model.kid.KidId">Edit</a>

<h1>Task List</h1>

@if (@Model.currentKidVTasks.Count() != 0)
{
    <form asp-action="Details" method="get">
        <div class="form-actions no-color">
            <p>
                Find by Description:
                <input type="hidden" name="KidId" asp-for="@Model.kid.KidId" />
                <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="Details"
                   asp-route-KidId="@Model.kid.KidId">Back to Full List</a>
            </p>
        </div>
    </form>
    <table class="table">
        <tr>
            <th>
                <a asp-action="Details"
                   asp-route-KidId="@Model.kid.KidId"
                   asp-route-sortOrder="@ViewData["NameSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Description</a>
            </th>
            <th>
                <a asp-action="Details"
                   asp-route-KidId="@Model.kid.KidId"
                   asp-route-sortOrder="@ViewData["PointSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Point</a>
            </th>
            <th>Done</th>
            <th>Kid Id</th>
        </tr>

        @foreach (var vTask in Model.paginatedList)
        {
            <partial name="_VTaskPartial" model="vTask" />
        }
    </table>

    var prevDisabled = !Model.paginatedList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.paginatedList.HasNextPage ? "disabled" : "";

    <a asp-action="Details"
       asp-route-KidId="@Model.kid.KidId"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.paginatedList.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Details"
       asp-route-KidId="@Model.kid.KidId"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.paginatedList.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
}
else
{
    <p>Please add Tasks to the list</p>
}
<a asp-controller="VTask"
   asp-action="Create"
   asp-route-KidId="@Model.kid.KidId"
   class="btn btn-primary">Add New</a>

<h1>Available Rewards:</h1>
@if (@Model.currentKidRewards.Count() != 0)
{
    <div class="row">
        @foreach (var reward in Model.currentKidRewards)
        {
            @if (reward.Acquired == false)
            {
                <partial name="_RewardCard" model="reward" />
            }
        }
    </div>
}
else
{
    <p>Please add Reward to the list</p>
}
<a asp-controller="Reward"
   asp-action="Create"
   asp-route-KidId="@Model.kid.KidId"
   class="btn btn-primary">Add New</a>

<h1>Redeemed Rewards:</h1>
@if (@Model.currentKidRewards.Count() != 0)
{
    <div class="row">
        @foreach (var reward in Model.currentKidRewards)
        {
            @if (reward.Acquired == true)
            {
                <partial name="_RewardCard" model="reward" />
            }
        }
    </div>
}
else
{
    <p>Please add Reward to the list</p>
}
